//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Migrator.Core {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class sql {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal sql() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Migrator.SQLServerProvider.sql", typeof(sql).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DECLARE @Version INT =(SELECT TOP 1 VersionId FROM [migrator].[SchemaVersion] ORDER BY CREATED DESC).
        /// </summary>
        internal static string DeclareVersionVariable {
            get {
                return ResourceManager.GetString("DeclareVersionVariable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO migrator.SchemaVersion SELECT GETDATE();.
        /// </summary>
        internal static string IncrementSchemaVersion {
            get {
                return ResourceManager.GetString("IncrementSchemaVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = N&apos;migrator&apos;)  
        ///	BEGIN
        ///		EXEC (&apos;CREATE SCHEMA [migrator]&apos;); 
        ///	END
        ///
        ///IF NOT EXISTS  (select * from sysobjects where name = &apos;SchemaVersion&apos;)   
        ///	BEGIN
        ///		CREATE TABLE [migrator].[SchemaVersion]     
        ///		(         
        ///			[VersionId] [int] PRIMARY KEY IDENTITY(100, 1) NOT NULL,        
        ///			[Created] [datetime] NOT NULL     
        ///		)   
        ///	END
        ///
        ///IF NOT EXISTS (select * from sysobjects where name = &apos;Migrations&apos;) 
        ///	BEGIN
        ///		CREATE TABLE [migrator].[Migrations]    [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string InitMigratorTables {
            get {
                return ResourceManager.GetString("InitMigratorTables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IF EXISTS (select * from sysobjects where name = &apos;Migrations&apos;)  
        ///	BEGIN
        ///		SELECT EntitySchemaXML FROM [migrator].[Migrations] 
        ///		WHERE VersionId = (SELECT TOP 1 VersionId FROM [migrator].[SchemaVersion] 
        ///							ORDER BY CREATED DESC)
        ///	END.
        /// </summary>
        internal static string SelectSchemas {
            get {
                return ResourceManager.GetString("SelectSchemas", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BEGIN TRY
        ///    BEGIN TRANSACTION
        ///
        ///       {0} 
        ///       {1}
        ///       {2}
        ///       {3}
        ///
        ///    COMMIT TRAN
        ///END TRY
        ///BEGIN CATCH
        ///    IF @@TRANCOUNT &gt; 0
        ///        ROLLBACK TRAN
        ///    DECLARE @ErrorMessage NVARCHAR(4000);  
        ///    DECLARE @ErrorSeverity INT;  
        ///    DECLARE @ErrorState INT;  
        ///
        ///    SELECT   
        ///       @ErrorMessage = ERROR_MESSAGE(),  
        ///       @ErrorSeverity = ERROR_SEVERITY(),  
        ///       @ErrorState = ERROR_STATE();  
        ///
        ///    RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);  
        ///END CATCH.
        /// </summary>
        internal static string Transaction {
            get {
                return ResourceManager.GetString("Transaction", resourceCulture);
            }
        }
    }
}
